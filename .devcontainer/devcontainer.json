// For format details, see https://containers.dev/implementors/json_reference/
{
    "name": "estelyth_backend_dev",
    "dockerComposeFile": [
        "../docker-compose.local.yml"
    ],
    "init": true,
    "mounts": [
        {
            "source": "./.devcontainer/bash_history",
            "target": "/home/dev-user/.bash_history",
            "type": "bind"
        },
        {
            "source": "~/.ssh",
            "target": "/home/dev-user/.ssh",
            "type": "bind"
        }
    ],
    // Tells devcontainer.json supporting services / tools whether they should run
    // /bin/sh -c "while sleep 1000; do :; done" when starting the container instead of the containerâ€™s default command
    "overrideCommand": false,
    "service": "django",
    // "remoteEnv": {"PATH": "/home/dev-user/.local/bin:${containerEnv:PATH}"},
    "remoteUser": "dev-user",
    "workspaceFolder": "/app",
    // Set *default* container specific settings.json values on container create.
    "customizations": {
        "vscode": {
            "settings": {
                "editor.formatOnSave": true,
                "[python]": {
                    "analysis.autoImportCompletions": true,
                    "analysis.typeCheckingMode": "strict",
                    "python.analysis.diagnosticMode": "openFilesOnly",
                    "python.analysis.autoSearchPaths": true,
                    "python.analysis.indexing": true,
                    "python.autoComplete.showDocstring": true,
                    "python.linting.enabled": true,
                    "python.linting.pylintEnabled": true,
                    "python.linting.flake8Enabled": true,
                    "python.linting.mypyEnabled": true,
                    "python.testing.pytestEnabled": true,
                    "python.testing.unittestEnabled": false,
                    "python.testing.nosetestsEnabled": false,
                    "python.formatting.provider": "black",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "always"
                    },
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "python.testing.pytestArgs": [
                        "tests"
                    ],
                    "python.envFile": "/workspace/.env",
                    "defaultInterpreterPath": "/usr/local/bin/python",
                    "languageServer": "Pylance",
                    "linting.mypyPath": "/usr/local/bin/mypy"
                }
            },
            // https://code.visualstudio.com/docs/remote/devcontainerjson-reference#_vs-code-specific-properties
            // Add the IDs of extensions you want installed when the container is created.
            "extensions": [
                "davidanson.vscode-markdownlint",
                "mrmlnc.vscode-duplicate",
                "visualstudioexptteam.vscodeintellicode",
                "visualstudioexptteam.intellicode-api-usage-examples",
                // python
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                // django
                "batisteo.vscode-django",
                // Linting and Formatting
                "ms-python.python",
                "ms-python.vscode-pylance",
                "charliermarsh.ruff",
                "ms-python.flake8",
                "python.vscode-pylint",
                "davidanson.vscode-markdownlint",
                "esbenp.prettier-vscode", // Prettier for consistent formatting
                "runem.linter", // Another linter option
                "ms-python.autopep8", // Auto formatting with PEP8
                // Django-Specific
                "batisteo.vscode-django",
                "magicstack.magicpython", // Improved syntax highlighting for Python and Django templates
                "donjayamanne.python-extension-pack", // A pack of useful Python extensions for development
                "adamvoss.vscode-django-template-support", // Support for Django templates
                // Testing Support
                "ms-python.testing-pytest",
                "johnsoncodehk.vscode-pytest-test-adapter", // Pytest test adapter for VSCode
                // Docker and DevOps
                "ms-azuretools.vscode-docker",
                "redhat.vscode-yaml", // YAML support, helpful for Docker, Kubernetes, etc.
                "eg2.vscode-npm-script", // To run npm or yarn scripts in your VSCode workspace
                "vsciot-vscode.vscode-azure-iot-tools", // For IoT development (could be useful in certain scenarios)
                // Git and Version Control
                "mhutchie.git-graph", // Visualize Git history and commits
                "coenraads.bracket-pair-colorizer-2", // Improve readability of matching brackets
                // Markdown/Documentation
                "davidanson.vscode-markdownlint",
                "yzhang.markdown-all-in-one", // Markdown tools
                "shd101wyy.markdown-preview-enhanced", // Enhanced Markdown previewer
                // General Tools
                "visualstudioexptteam.vscodeintellicode", // IntelliCode
                "visualstudioexptteam.intellicode-api-usage-examples" // IntelliCode API usage examples
            ]
        }
    },
    // Uncomment the next line if you want start specific services in your Docker Compose config.
    // "runServices": [],
    // Uncomment the next line if you want to keep your containers running after VS Code shuts down.
    // "shutdownAction": "none",
    // Uncomment the next line to run commands after the container is created.
    "postCreateCommand": "cat .devcontainer/bashrc.override.sh >> ~/.bashrc"
}